const XState = require('xstate')
const { Machine } = XState
const encode_SM = require('encode-state-machine')
const attest_SM = require('attest-state-machine')
const host_SM = require('host-state-machine')
const hosting_start_encode = require('encode-state-machine/sub-hosting-start')
const hosting_start_host = require('host-state-machine/sub-hosting-start')
const hosting_start_attest = require('attest-state-machine/sub-hosting-start')


module.exports = Machine({
  initial: 'idle',
  states: {
    idle: {
      id: 'idleState',
      type: 'parallel',
      on: {
        EVENT_HOSTING_START: {
          target: 'hosting_start'
        },
        // EVENT_HOSTING_REPAIR: { // new_hosting_setup
        //   target: 'hosting_start'
        // },
        // EVENT_PROOF_OF_STORAGE_REQUEST: {
        //   target: 'proof_of_storage'
        // },
        // EVENT_PERFORMANCE_BENCHMARK: {
        //   target: 'performance_benchmark'
        // },
        // EVENT_HOSTING_PAUSE: {
        //   target: 'hosting_pause'
        // },
        // EVENT_HOSTING_END: {
        //   target: 'hosting_end'
        // },
      },
    },
    hosting_start: {
      on: {},
      ...hosting_start_host,
      ...hosting_start_encode,
      ...hosting_start_attest,
    }
  }
})
