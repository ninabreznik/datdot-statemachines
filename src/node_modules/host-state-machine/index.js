const XState = require('xstate')
const { Machine } = XState
const hosting_start = require('./sub-hosting-start')
const hosting_pause = require('./sub-hosting-pause')
const hosting_resume = require('./sub-hosting-resume')
const hosting_end = require('./sub-hosting-end')
const proof_of_storage = require('./sub-proof-of-storage')
const performance_benchmark = require('./sub-performance-benchmark')

module.exports = Machine({
  initial: 'idle',
  states: {
    idle: {
      id: 'idleState',
      on: {
        EVENT_HOSTING_START: {
          target: 'hosting_start'
        },
        EVENT_HOSTING_REPAIR: {
          target: 'hosting_start'
        },
      },
    },
    hosting: {
      id: 'hostingState',
      entry: ['join_swarm_and_seed'],
      on: {
        EVENT_PROOF_OF_STORAGE_REQUEST: {
          target: 'proof_of_storage'
        },
        EVENT_PERFORMANCE_BENCHMARK: {
          target: 'performance_benchmark'
        },
        EVENT_HOSTING_PAUSE: {
          target: 'hosting_pause'
        },
        EVENT_HOSTING_END: {
          target: 'hosting_end'
        },
      }
    },
    paused: {
      id: 'pausedState',
      on: {
        EVENT_HOSTING_RESUME: {
          target: 'hosting_resume'
        }
      }
    },
    hosting_start: {
      on: {},
      ...hosting_start
    },
    hosting_pause: {
      on: {},
      ...hosting_pause
    },
    hosting_resume: {
      on: {},
      ...hosting_resume
    },
    hosting_end: {
      on: {},
      ...hosting_end
    },
    proof_of_storage: {
      on: {},
      ...proof_of_storage
    },
    performance_benchmark: {
      on: {},
      ...performance_benchmark
    },
  }
})
