module.exports = {
    initial: 'find_last_state',
    states: {
      find_last_state: {
        entry: ['find_last_state'],
        on: {
          RESOLVE: 'connect_to_attestor',
          REJECT: 'fail_find_last_state' // retry
        },
      },
      fail_find_last_state: {
        on: {
          RETRY: 'find_last_state'
        }
      },
      connect_to_attestor: {
        entry: ['if_not_connected_p2plex_to_attestor'],
        exit: ['store_current_state'],
        on: {
          RESOLVE: 'receive_and_store_data',
          REJECT: 'fail_connect_to_attestor' // retry
        },
      },
      fail_connect_to_attestor: {
        on: {
          RETRY: 'connect_to_attestor'
        }
      },
      receive_and_store_data: {
        entry: ['receive_data', 'verify_data', 'store_data'], // stream, all happening in parallel
        exit: ['store_current_state', 'disconnect'],
        on: {
          _RESOLVE: '#hostingState',
          _REJECT: 'fail_receive_and_store_data' // retry
        },
      },
      fail_receive_and_store_data: {
        on: {
          RETRY: 'receive_and_store_data'
        }
      },
    }
}
