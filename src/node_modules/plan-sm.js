const XState = require('xstate')
const { Machine, interpret, assign } = XState

module.exports = Machine({
  initial: 'idle',
  states: {
    idle: {
      on: {
        PLAN_SUBSCRIBE: {
          target: 'subscribe'
        },
        PLAN_UPDATE: {
          target: 'update'
        },
        PLAN_PAUSE: {
          target: 'pause'
        },
        PLAN_RESUME: {
          target: 'resume'
        },
        PLAN_UNSUBSCRIBE: {
          target: 'unsubscribe'
        },
      },
    },
    subscribe: {
      entry: ['create_plan'],
      on: {
        _RESOLVE: 'submit_to_chain',
        _REJECT: 'fail_subscribe'
      }
    },
    update: {
      entry: ['update_plan'],
      on: {
        _RESOLVE: 'submit_to_chain',
        _REJECT: 'fail_update'
      }
    },
    pause: {
      entry: ['hosting_pause_or_end'],
      on: {
        _RESOLVE: 'idle',
        _REJECT: 'fail_pause'
      }
    },
    resume: {
      entry: ['hosting_resume_or_start'],
      on: {
        _RESOLVE: 'idle',
        _REJECT: 'fail_resume'
      }
    },
    unsubscribe: {
      entry: ['hosting_end'],
      on: {
        _RESOLVE: 'idle',
        _REJECT: 'fail_unsubscribe'
      }
    },
    submit_to_chain: {
      entry: ['submit'],
      on: {
        RESOLVE: 'idle',
        REJECT: 'fail_submit_to_chain'
      }
    },
    fail_subscribe: {
      on: {
        _RETRY: 'subscribe'
      }
    },
    fail_update: {
      on: {
        _RETRY: 'update'
      }
    },
    fail_pause: {
      on: {
        _RETRY: 'pause'
      }
    },
    fail_resume: {
      on: {
        _RETRY: 'resume'
      }
    },
    fail_unsubscribe: {
      on: {
        _RETRY: 'unsubscribe'
      }
    },
    fail_submit_to_chain: {
      on: {
        _RETRY: 'submit_to_chain'
      }
    },
  }
})
